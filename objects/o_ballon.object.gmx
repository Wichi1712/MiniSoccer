<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ballon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>estadoPelota = "parado";
direccion = 3;
velocidadH = 0;
velocidadV = 0;
giro =5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movimiento
x +=velocidadH;
y +=velocidadV;

if(estadoPelota == "impulso"){
    //Limite horizontal
    if(x &gt; room_width)velocidadH = -3;
    if(x &lt; 0)velocidadH = 3;
    
    //Limite vertical
    if(y &gt; room_height)velocidadV = -3
    if(y &lt; 0)velocidadV = 3;
    
    
    //Giro
    image_angle +=giro;
    if image_angle &gt;= 360 image_angle = 0;
    
    
    //Reduce velocidad horizontal
    if velocidadH &gt; 0 velocidadH -=0.1;
    if velocidadH &lt; 0 velocidadH +=0.1;
    //if(velocidadH == 0) estadoPelota = "parado";
    
    //Reduce velocidad vertical
    if velocidadV &gt; 0 velocidadV -=0.1;
    if velocidadV &lt; 0 velocidadV +=0.1;
    
    if(velocidadV == 0 &amp;&amp; velocidadH == 0) estadoPelota = "parado";
}

if(estadoPelota == "parado"){
    velocidadH = 0;
    velocidadV = 0;
}

//patada
if(o_player.space &amp;&amp; distance_to_object(o_player)&lt;10){
    if x &gt; o_player.x velocidadH = 8;
    if x &lt; o_player.x velocidadH = -8;
    if y &lt; o_player.y velocidadV = 8;
    if y &lt; o_player.y velocidadV = -8;
    estadoPelota = "impulso";
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="o_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Velocidad y estadoPelota
/*
if(o_player.right){
    velocidadH = 3;
    estadoPelota = "impulso";
}
else if(o_player.left){
    velocidadH = -3;
    estadoPelota = "impulso";
}
else if(o_player.up){
    velocidadV = -3;
    estadoPelota = "impulso";
}
else if(o_player.down){
    velocidadV = 3;
    estadoPelota = "impulso";
    }
*/

//else{
    //velocidadH = 0;
    //velocidadV = 0;
    //estadoPelota = "parado";
//}

if(o_player.right){
    velocidadH = 3;
    estadoPelota = "impulso";
}
if(o_player.left){
    velocidadH = -3;
    estadoPelota = "impulso";
}
if(o_player.up){
    velocidadV = -3;
    estadoPelota = "impulso";
}
if(o_player.down){
    velocidadV = 3;
    estadoPelota = "impulso";
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Test
draw_self();
draw_circle_color(x,y, 10, c_orange,c_red,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
